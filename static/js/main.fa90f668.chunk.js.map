{"version":3,"sources":["components/Form/Form.js","components/Table/TableBody.js","components/Table/TableHead.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","useState","formData","setFormData","useEffect","Filter","formName","onChange","e","target","value","handleFormChange","type","TableBody","fName","lName","gender","email","TableHead","App","getRequest","a","axios","get","response","result","data","results","console","log","userArray","then","res","push","className","Table","striped","bordered","hover","responsive","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PA4BeA,EAxBF,SAACC,GAAU,MAEYC,mBAAS,IAFrB,mBAEbC,EAFa,KAEHC,EAFG,KAcpB,OAJAC,qBAAU,cAEP,CAACF,EAASG,SAGT,qCACI,6BAAKL,EAAMM,WACX,+BACI,uBAAOC,SAAU,SAACC,GAAD,OAbJ,SAACA,GAEtBL,EAAY,2BAAKD,GAAN,kBAAiBF,EAAMM,SAAWE,EAAEC,OAAOC,SAWtBC,CAAiBH,IAAII,KAAK,OAAON,SAAUN,EAAMM,iB,QCP1EO,G,MAbG,SAACb,GACf,OACI,gCACI,+BACA,6BAAKA,EAAMc,QACX,6BAAKd,EAAMe,QACX,6BAAKf,EAAMgB,SACX,6BAAKhB,EAAMiB,eCMRC,EAbG,WACd,OACI,gCACI,+BACA,4CACA,2CACA,sCACA,6C,iBCuCGC,MAvCf,WAGE,IAAMC,EAAU,uCAAI,4BAAAC,EAAA,4DACN,+CADM,kBAISC,IAAMC,IAHrB,gDADM,cAIRC,EAJQ,yBAKP,CACHC,OAAQD,EAASE,KAAKC,UANZ,gCASdC,QAAQC,IAAR,MATc,iEAAJ,qDAcVC,EAAY,GAUlB,OAPA1B,qBAAU,WACNgB,IAAaW,MAAK,SAACC,GAAD,OAASF,EAAUG,KAAKD,MAG1CJ,QAAQC,IAAIC,KACb,IAGD,sBAAKI,UAAU,MAAf,UACE,cAAC,EAAD,CAAM5B,SAAS,WACf,eAAC6B,EAAA,EAAD,CAAOC,QAAQ,OAAOC,SAAS,OAAOC,MAAM,OAAOC,WAAW,KAA9D,UACE,cAAC,EAAD,IAEA,cAAC,EAAD,CAAWzB,MAAO,KAAMC,MAAO,UAAWC,OAAO,OAAOC,MAAM,yBC9BvDuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fa90f668.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\n// This component was originally intended to serve as a search filter. But I haven't had time to work with it.\r\n\r\nconst Form = (props) => {\r\n    // setFormData will store a state within formData.\r\n    const [formData, setFormData] = useState(\"\");\r\n\r\n    // A prebuilt function that triggers when forms are changed.\r\n    const handleFormChange = (e) => {\r\n        // The spread allows multiple States; otherwise each state will overwrite the previous.\r\n        setFormData({ ...formData, [props.formName]: e.target.value });\r\n    };\r\n\r\n    useEffect(() => {\r\n        // console.log(formData.Filter)\r\n    }, [formData.Filter])\r\n\r\n    return (\r\n        <>\r\n            <h1>{props.formName}</h1>\r\n            <form>\r\n                <input onChange={(e) => handleFormChange(e)} type=\"text\" formName={props.formName}></input>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst TableBody = (props) => {\r\n    return (\r\n        <tbody>\r\n            <tr>\r\n            <td>{props.fName}</td>\r\n            <td>{props.lName}</td>\r\n            <td>{props.gender}</td>\r\n            <td>{props.email}</td>\r\n            </tr>\r\n        </tbody>\r\n    );\r\n};\r\n\r\nexport default TableBody\r\n","import React from 'react'\r\n\r\nconst TableHead = () => {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Male</th>\r\n            <th>Email</th>\r\n            </tr>\r\n        </thead>\r\n    );\r\n};\r\n\r\nexport default TableHead\r\n","import './App.css';\nimport Form from './components/Form/Form';\nimport Table from 'react-bootstrap/Table'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport TableBody from './components/Table/TableBody';\nimport TableHead from './components/Table/TableHead';\nimport axios from \"axios\";\nimport { useEffect } from 'react';\n\nfunction App() {\n\n  // Our API get request. Will return 20 U.S. users.\n  const getRequest =  async () => {\n    const URL = \"https://randomuser.me/api/?results=20&nat=us\";\n\n    try{\n        const response = await axios.get(URL)\n        return {\n            result: response.data.results\n        };\n    } catch (err) {\n        console.log(err);\n    };\n  };\n\n    //  To store all of our API generated users.\n    let userArray = [];\n\n  // On app load, I wanted to fill our userArray with the API users.\n  useEffect(() => {\n      getRequest().then((res) => userArray.push(res));\n      // I've spent two hours trying to understand why the array won't load\n      // the indexed values of the API array, but can't figure it out in time.\n      console.log(userArray)\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Form formName=\"Filter\" />\n      <Table striped=\"true\" bordered=\"true\" hover=\"true\" responsive=\"md\">\n        <TableHead />\n        {/* I planned to create 20 table bodies and fill the info from the array. This was a workaround. */}\n        <TableBody fName={\"Hi\"} lName={\"Moscone\"} gender=\"Male\" email=\"test@test.com\"/>\n      </Table>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}